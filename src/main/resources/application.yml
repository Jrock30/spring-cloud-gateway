server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:  # 자바 코드로도 설정할 수 있다.
    gateway:
      default-filters:
        - name: GlobalFilter # 글로벌 필터 클래스 명
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE # 유레카 서비스(APP) 명
          predicates: # 조건절
            - Path=/user-service/login # 스프링 시큐리티가 자동으로 처리
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment} # 앞에 user-service 형태를 뺴고 뒤의 형태로 바꾸겠다는 뜻 / 즉 user-service 를 제거
        - id: user-service
          uri: lb://USER-SERVICE # 유레카 서비스(APP) 명
          predicates: # 조건절
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE # 유레카 서비스(APP) 명
          predicates: # 조건절
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter # 인증 헤더필터 처리
        - id: user-service
          uri: lb://USER-SERVICE # 유레카 서비스(APP) 명
          predicates: # 조건절
            - Path=/user-service/actuator/** # actuator
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#            - AuthorizationHeaderFilter # 인증 헤더필터 처리
        - id: catalog-service
          uri: lb://CATALOG-SERVICE # 유레카 서비스(APP) 명
          predicates: # 조건절
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE # 유레카 서비스(APP) 명
          predicates: # 조건절
            - Path=/order-service/**
        - id: first-service
#          uri: http://localhost:8081/ # 이동될 주소
          uri: lb://MY-FIRST-SERVICE # 유레카 서비스(APP) 명
          predicates: # 조건절
            - Path=/first-service/**
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-resonse, first-resonse-header2
            - CustomFilter # 커스텀 필터 클래스명
        - id: second-service
#          uri: http://localhost:8082/
          uri: lb://MY-SECOND-SERVICE # 유레카 서비스(APP) 명
          predicates:
            - Path=/second-service/**
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-resonse, second-resonse-header2
            - name: CustomFilter # 커스텀 필터가 여러개 생기면 name 으로 등록해주어여 한다.
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true

token:
  secret: user_token

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh